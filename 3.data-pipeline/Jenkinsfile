pipeline {
    agent any

    environment {
        AWS_ACCESS_KEY_ID = credentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
        AWS_DEFAULT_REGION = credentials('AWS_DEFAULT_REGION')
        ECR_HOST = credentials('ECR_HOST')
        ECR_REPO = credentials('ECR_REPO')
    }

    stages {
        stage('ECR login') {
            steps {
                sh 'aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_HOST'
            }
        }
        stage('Build image') {
            steps {
                sh 'docker build -f ./3.data-pipeline/dockerfile.mage -t $ECR_REPO .'
            }
        }
        stage('Tag image') {
            steps {
                sh 'docker tag $ECR_REPO:latest $ECR_HOST/$ECR_REPO:latest'
                sh 'docker images'
            }
        }
        stage('Test') {
            steps {
                sh 'docker run -p 6789:6789 -d $ECR_REPO:latest'
                sh 'curl --request GET --url "http://localhost:6789/api/pipelines"'
                sh 'docker ps'
            }
        }
        stage('Push image') {
            steps {
                sh 'docker push $ECR_HOST/$ECR_REPO:latest'
            }
        }
        stage('Deployment') {
            steps {
                echo 'Deployment kubectl apply -f deployment.yml';
            }
        }
    }
}
